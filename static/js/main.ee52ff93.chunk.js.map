{"version":3,"sources":["serviceWorker.js","containers/ErrorBoundry.js","components/Card.js","actions.js","constants.js","components/CardList.js","components/Searchbox.js","components/Profile.js","components/Scroll.js","containers/App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","ErrorBoundry","state","hasError","error","info","this","setState","props","children","React","Component","Card","name","email","id","viewProfile","className","src","alt","onClick","changeActivePage","page","type","payload","connect","activePage","dispatch","onViewProfile","event","target","getAttribute","robots","cardComponent","map","user","key","SearchBox","searchChange","placeholder","onChange","Profile","userid","viewCardlists","filter","robot","parseInt","address","phone","website","console","log","style","fontSize","city","street","Scroll","overflowY","overflowX","height","App","searchValue","onSearchChange","profileId","onViewCardlists","filteredRobots","toLowerCase","includes","length","searchRobots","isPending","requestRobots","value","onRequestRobots","fetch","then","response","json","data","catch","initialState","initialStateRobots","initialStateViewProfile","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ee52ff93.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    const { hasError } = this.state;\r\n    return hasError ? (\r\n      <h1>Oooops! Something went wrong!</h1>\r\n    ) : (\r\n      this.props.children\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from \"react\";\r\nconst Card = ({ name, email, id, viewProfile }) => {\r\n  return (\r\n    <div className=\"col-lg-4 col-sm-6 mb-5\">\r\n      <div className=\"card bg-info border border-light shadow text-center h-100 mx-auto\">\r\n        <img\r\n          src={`https://robohash.org/${id}>200x200`}\r\n          alt=\"robots\"\r\n          className=\"img-fluid\"\r\n        />\r\n        <div>\r\n          <h5>{name}</h5>\r\n          <p>{email}</p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <button className=\"btn btn-md btn-dark\" onClick={viewProfile} id={id}>\r\n            View Profile\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import {\r\n  CHANGE_SEARCH_VALUE,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n  VIEW_PROFILE,\r\n  CHANGE_ACTIVE_PAGE,\r\n} from \"./constants\";\r\n\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCH_VALUE,\r\n  payload: text,\r\n});\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((response) => response.json())\r\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch((error) =>\r\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\r\n    );\r\n};\r\n\r\nexport const changeActivePage = (page) => ({\r\n  type: CHANGE_ACTIVE_PAGE,\r\n  payload: page,\r\n});\r\n\r\nexport const viewProfile = (id) => ({\r\n  type: VIEW_PROFILE,\r\n  payload: id,\r\n});\r\n","export const CHANGE_SEARCH_VALUE = \"CHANGE_SEARCH_VALUE\";\r\n\r\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\r\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\r\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_PENDING\";\r\n\r\nexport const VIEW_PROFILE = \"VIEW_PROFILE\";\r\n\r\nexport const CHANGE_ACTIVE_PAGE = \"CHANGE_ACTIVE_PAGE\";\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeActivePage, viewProfile } from \"../actions\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activePage: state.changeActivePage.activePage,\r\n    viewProfile: state.viewProfile.id,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onViewProfile: (event) => {\r\n      dispatch(changeActivePage(\"profile\"));\r\n      dispatch(viewProfile(event.target.getAttribute(\"id\")));\r\n    },\r\n  };\r\n};\r\nconst CardList = ({ robots, onViewProfile }) => {\r\n  const cardComponent = robots.map((user) => {\r\n    return (\r\n      <Card\r\n        key={user.id}\r\n        name={user.name}\r\n        email={user.email}\r\n        id={user.id}\r\n        viewProfile={onViewProfile}\r\n      />\r\n    );\r\n  });\r\n  return <div className=\"row p-3\">{cardComponent}</div>;\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardList);\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"form-group border border-primary rounded mx w-100 mt-3\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"search robots\"\r\n        className=\"form-control \"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nconst Profile = ({ userid, robots, viewCardlists }) => {\r\n  const user = robots.filter((robot) => robot.id === parseInt(userid))[0];\r\n  const { id, name, email, address, phone, website } = user;\r\n\r\n  console.log(user);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-12 col-sm-4\">\r\n          <div className=\"card bg-info border border-light shadow text-center h-100 mx-auto\">\r\n            <img\r\n              src={`https://robohash.org/${id}>200x200`}\r\n              alt=\"robots\"\r\n              className=\"img-fluid\"\r\n            />\r\n            <div className=\"card-body\">\r\n              <h2>{name}</h2>\r\n              <p>{email}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* col */}\r\n        <div className=\"col-12 col-sm-8 d-flex p-5 \">\r\n          <ul\r\n            className=\"list-unstyled text-light d-flex flex-column justify-content-center h-100\"\r\n            style={{ fontSize: \"1.5em\" }}\r\n          >\r\n            <li className=\"mb-4\">\r\n              <b className=\"d-block\">Address: </b>\r\n              {`${address.city}, ${address.street}`}\r\n            </li>\r\n            <li className=\"mb-4\">\r\n              <b className=\"d-block\">Address: </b>\r\n              {phone}\r\n            </li>\r\n            <li className=\"mb-4\">\r\n              <b className=\"d-block\">Website: </b>\r\n              {website}\r\n            </li>\r\n          </ul>\r\n          <div className=\" d-block ml-auto \">\r\n            <button onClick={viewCardlists} className=\"btn btn-warning px-3\">\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* row */}\r\n    </div>\r\n    // container\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nconst Scroll = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        overflowX: \"hidden\",\r\n        height: \"80vh\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import ErrorBoundry from \"./ErrorBoundry\";\r\nimport React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/Searchbox\";\r\nimport Profile from \"../components/Profile\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSearchField, requestRobots, changeActivePage } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchValue: state.searchRobots.searchValue,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error,\r\n    robots: state.requestRobots.robots,\r\n    activePage: state.changeActivePage.activePage,\r\n    profileId: state.viewProfile.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: dispatch(requestRobots()),\r\n    onViewCardlists: (event) => dispatch(changeActivePage(\"cardlists\")),\r\n  };\r\n};\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const {\r\n      searchValue,\r\n      onSearchChange,\r\n      robots,\r\n      activePage,\r\n      profileId,\r\n      onViewCardlists,\r\n    } = this.props;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchValue.toLowerCase());\r\n    });\r\n\r\n    if (activePage === \"cardlists\") {\r\n      // cardlists\r\n      return !robots.length ? (\r\n        <h1 className=\"text-center logo mt-5\">Loading...</h1>\r\n      ) : (\r\n        <div className=\"container mt-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h1 className=\"logo text-center\">RoboFriends</h1>\r\n            </div>\r\n            <div className=\"offset-md-4 col-md-4 col-10 offset-1\">\r\n              <SearchBox searchChange={onSearchChange} />\r\n            </div>\r\n          </div>\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    } else if (activePage === \"profile\") {\r\n      return (\r\n        <Profile\r\n          userid={profileId}\r\n          robots={robots}\r\n          viewCardlists={onViewCardlists}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCH_VALUE,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n  CHANGE_ACTIVE_PAGE,\r\n  VIEW_PROFILE,\r\n} from \"./constants\";\r\n\r\nconst initialState = {\r\n  searchValue: \"\",\r\n  activePage: \"cardlists\",\r\n};\r\n\r\nconst initialStateRobots = {\r\n  isPending: false,\r\n  error: \"\",\r\n  robots: [],\r\n};\r\n\r\nconst initialStateViewProfile = {\r\n  id: 0,\r\n};\r\n\r\nexport const searchRobots = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_VALUE:\r\n      return Object.assign({}, state, {\r\n        searchValue: action.payload.toLowerCase(),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, {\r\n        isPending: true,\r\n      });\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isPending: false,\r\n        robots: action.payload,\r\n      });\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {\r\n        isPending: false,\r\n        error: action.payload,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeActivePage = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_ACTIVE_PAGE:\r\n      return Object.assign({}, state, { activePage: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const viewProfile = (state = initialStateViewProfile, action = {}) => {\r\n  switch (action.type) {\r\n    case VIEW_PROFILE:\r\n      return Object.assign({}, state, { id: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./containers/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport {\n  searchRobots,\n  requestRobots,\n  changeActivePage,\n  viewProfile,\n} from \"./reducers\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({\n  searchRobots,\n  requestRobots,\n  changeActivePage,\n  viewProfile,\n});\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}